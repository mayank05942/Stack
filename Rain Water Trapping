Leetcode:https://leetcode.com/problems/trapping-rain-water/



Code:

class Solution:
    def trap(self, arr: List[int]) -> int:
        if len(arr) == 0:
            return 0

        max_l = []
        max_l.append(arr[0])
        for i in range(1,len(arr)):
            temp = 0
            if arr[i] > max_l[i-1]:
                temp = arr[i]
                max_l.append(temp)
            else:
                max_l.append(max_l[i-1])
        #print(max_l)
        max_r = []
        current_max = 0
        for j in range(len(arr)-1,-1,-1):
            if arr[j] > current_max:
                current_max = arr[j]
                max_r.append(arr[j])
            else:
                max_r.append(current_max)
        max_r.reverse()
        #print(max_r)
        lis = []
        for i,j in zip(max_l,max_r):
            x = min(i,j)
            if x == 0:
                lis.append(0)
            else:
                lis.append(x)

        res = []

        for i in range(len(arr)):
            res.append(lis[i]-arr[i])

        return sum(res)

